/*#### Task 1 üíª

>> –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car. –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞ SportCar –∏ LuxuryCar. v 
>> –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ –∏ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è. 
>> –î–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥—è—â–∏–µ –º–∞–∫—Å–∏–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Ü–µ–Ω—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ç–∏–ø—ã –∞–≤—Ç–æ.
>> –í—ã–≤–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: `This is <carName>. It has <engineType> engine and max speed equal to <maxSpeed>.
>> Approximetly cost of the car is <carCost>`. (–í –∑–∞–¥–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ public –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)

*/

class Car {
    constructor(public carBrand: string, public engineType: string) {}
  }
  
  class SportCar extends Car {
    constructor(public carBrand: string, public engineType: string, public maxSpeed: number) {
      super(carBrand, engineType);
    }
  
    getMaxSpeed(): number {
      return this.maxSpeed;
    }
  }
  
  class LuxuryCar extends Car {
    constructor(public carBrand: string, public engineType: string, public carCost: number) {
      super(carBrand, engineType);
    }
  
    getCarCost(): number {
      return this.carCost;
    }
  }
  
  const mazda = new SportCar('mazda', 'V8', 350);
  const BMW = new LuxuryCar('BMW', 'V12', 500000);
  
  console.log(`This is ${mazda.carBrand}. It has ${mazda.engineType} engine and max speed equal to ${mazda.getMaxSpeed()}.`);
  console.log(`Approximately cost of the car is ${BMW.getCarCost()}.`);
  